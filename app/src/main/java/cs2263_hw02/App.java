/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package cs2263_hw02;

import org.apache.commons.cli.*;

import java.io.File;
import java.util.Scanner;
import java.io.FileWriter;

import static cs2263_hw02.Cmd_Evalution.CmdEvaluation;

/**
 * This class accepts a cli argument, and then evaluates string expressions from either a file or the command line,
 * and then returns the value to the terminal (and has the option to also write it to a file, provided
 * by the correct cli argument)
 * @author Eric Hill
 */
public class App {
    /**
     * This method accepts a string, breaks it down to components, and evaluates it
     * @param s - the mathematical equation string
     * @return total - the evaluated value of the string
     */

    public static double EvaluateString(String s){
        String[] terms = s.split(" ");
        double total = Double.parseDouble(terms[0]);
        for (int i = 1; i < terms.length; i += 2){
            total = operation(total, terms[i], Double.parseDouble(terms[i+1]));
        }
        return total;
    }

    /**
     * This method takes two number inputs and an operator input, and returns the output
     * @param one - the first double of the sub-operation
     * @param operator - the specific operator of the sub-operation
     * @param two - the second double of the sub-operation
     * @return the result of the sub-operation
     */

    private static double operation(double one, String operator, double two){
        switch (operator) {
            case "+": return one + two;
            case "*": return one * two;
            case "/": return one / two;
            case "-": return one - two;
            default: return 0;
        }
    }

    public static void main(String[] args) throws ParseException {
        Options options = new Options();
        options.addOption("h","help", false, "print usage message");
        Option batch_opt = new Option("b", "batch", true, "batch file containing expressions to evaluate");
        batch_opt.setArgName("file");
        options.addOption(batch_opt);
        Option out_opt = new Option("o", "output", true, "output file");
        out_opt.setArgName("file");
        options.addOption(out_opt);

        //these methods are just here for my own future reference, if I ever need to use apache cli again
        //CommandLineParser parser = new DefaultParser();
        //CommandLine cmd = parser.parse(options, args);
        CommandLine cmd;
        CommandLineParser parser = new DefaultParser();
        HelpFormatter helper = new HelpFormatter();

        try {
            cmd = parser.parse(options, args);
            if(cmd.hasOption("h")) {
                helper.printHelp("gradle run --args=\"[options]\"", options, true);
                System.out.println("To successfully save the changed to a file (assuming -o option), input any invalid string to the input stream");
                System.exit(0);
            }
            else if (cmd.hasOption("b")) {
                try {
                    File file = new File(cmd.getOptionValue("b"));
                    Scanner scanner = new Scanner(file);

                    while(scanner.hasNextLine()) {
                        String sentence = scanner.nextLine();
                        System.out.println("The total of the expression "+sentence+" is " + EvaluateString(sentence));
                    }
                }
                catch(Exception e) {
                    System.out.println(e.getMessage());
                    System.out.println("Please provide a valid file of expressions");
                }
            }
            else if (cmd.hasOption("o")) {
                File file = new File(cmd.getOptionValue("o"));
                file.createNewFile();
                FileWriter writer = new FileWriter(cmd.getOptionValue("o"));
                try{
                    while (true){
                        Scanner scanner = new Scanner(System.in);
                        String sentence = scanner.nextLine();
                        writer.write("The total of the expression "+sentence+" is " + EvaluateString(sentence)+"\n");
                        System.out.println("The total of the expression "+sentence+" is " + EvaluateString(sentence));
                    }
                }
                catch(Exception e){
                    writer.close();
                }

            }
            else{
                while (true){
                    System.out.println("The total of the expression is " + CmdEvaluation());
                }
            }
        } catch (Exception e) {
            System.out.println("Invalid input, ending the session");
            System.exit(0);
        }
    }
}
